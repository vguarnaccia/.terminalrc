###############################################################################
# Git Abbreviations
###############################################################################

alias gs='git status -sb'
alias ga='git add'
alias gd='git diff'
alias gdc='git diff --cached'
alias gmv='git mv'
alias grm='git rm'
alias grc='git rm --cached'
function gc { git commit -m "$*"; }
alias gl="git log --graph --pretty=format:'%C(yellow)%h%Creset %C(green)%G?%Creset%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'" # pretty log
alias gpl='git pull'
alias gpu='git push'
alias gbr='git branch -vv'
alias gco='git checkout'
alias gst='git stash'

# Set the cache to timeout after 1 hour (setting is in seconds)
alias gcache="git config --global credential.helper 'cache --timeout=3600'"

###############################################################################
# Colorize
###############################################################################

alias ls='ls --color=auto'
alias dir='dir --color=auto'
alias vdir='vdir --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias less='less --RAW-CONTROL-CHARS --LINE-NUMBERS --LONG-PROMPT'

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Default to human readable figures
alias df='df -h'
alias du='du -h'

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Colorize less using pygmentize if installed
# Try `$ pip install Pygments` if it's not
if [ -x "$(command -v pygmentize)" ]; then
    # Use pygmentize to colorize `less`.
    # Will not colorize if piped.
    # I.e.:
    # $ less script.py  # colorized
    # $ cat script.py | less  # not colorized
    # See https://www.meejah.ca/blog/less-pygments for more.
    export LESSOPEN="| pygmentize %s"
    # I find I need -X
    export LESS='-XFR'
    # ...but do *not* want -X for man-pages
    export MANPAGER="less -+X -is"
fi

# At least colorize man pages
function man {
    env \
        LESS_TERMCAP_mb="$(printf "\e[1;31m")" \
        LESS_TERMCAP_md="$(printf "\e[1;31m")" \
        LESS_TERMCAP_me="$(printf "\e[0m")" \
        LESS_TERMCAP_se="$(printf "\e[0m")" \
        LESS_TERMCAP_so="$(printf "\e[1;44;33m")" \
        LESS_TERMCAP_ue="$(printf "\e[0m")" \
        LESS_TERMCAP_us="$(printf "\e[1;32m")" \
            man "$@"
};

###############################################################################
# Improved Movement
###############################################################################

# Some more ls aliases
alias ll='ls -AhlF'
alias l='ls -CF'
alias cd..='cd ..' # common typo

# Easily move around directories
function cdl { cd "$1"; ls; }
function mkcd { mkdir -p -- "$1"; cd -P -- "$1"; }
function up
{
    for ((i=1; i<=$1; i++));
    do
        cd ..
    done;
}

# Better than `which`
alias whence='type -a'

# Avoid mistakes
alias rm='rm -I'
alias cp='cp -i'
alias mv='mv -i'

# Add an "alert" alias for long running commands.  Use like so:
# $ sleep 10; alert
alias alert='; notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

alias H='| head'
alias T='| tail'
alias L='| less'

# Alias various `open` commands as `o`
if  [[ "$OSTYPE" == "darwin"* ]]; then
    alias o='open'
elif  [[ "$OSTYPE" == "cygwin" ]]; then
    alias o='cygstart'
elif  [[ "$OSTYPE" == "msys" ]]; then
    alias o='explorer.exe'  # hoping this works
else
    alias o='xdg-open'
fi

# Quick editing and sourcing.
alias bashrc='$VISUAL $HOME/.bashrc; source $HOME/.bashrc'
alias zshrc='$VISUAL $HOME/.zshrc; source $HOME/.zshrc'
alias localrc='$VISUAL $HOME/.terminalrc/local; source $HOME/.terminalrc/local'

# Useful unarchiver!
function extract {
    if [ -f "$1" ] ; then
        case "$1" in
            *.tar.bz2) tar xjf "$1"   ;;
            *.tar.gz)  tar xzf "$1"   ;;
            *.bz2)     bunzip2 "$1"   ;;
            *.rar)     rar x "$1"     ;;
            *.gz)      gunzip "$1"    ;;
            *.tar)     tar xf "$1"    ;;
            *.tbz2)    tar xjf "$1"   ;;
            *.tgz)     tar xzf "$1"   ;;
            *.zip)     unzip "$1"     ;;
            *.Z)       uncompress "$1";;
            *)         echo "'$1' cannot be extracted via extract()";;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}
